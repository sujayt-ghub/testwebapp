prerequisites -
  sudo apt update
  sudo apt install docker.io
  sudo apt install mysql-server
  #make sure the current mysql server can able from outside network
  #refer this https://stackoverflow.com/questions/15872543/access-mysql-remote-database-from-command-line
  #check hostname with command - hostname -i
  #sudo nano /etc/mysql/mysql.conf.d/mysqld.cnf #edit the file
  #Search for bind-address in my.cnf or mysqld.cnf and and change 127.0.0.1 to 192.168.1.100 ( local ip address )
  #  Example bind-address = 192.168.1.100
  #sudo /etc/init.d/mysql restart  #restart mysql service
  #Modify user root for lan acces ( run the query's bellow in remote server that you want to have access )
  #sudo mysql -u root -p
  #CREATE USER 'root'@'%' IDENTIFIED BY 'password';
  #GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
  #FLUSH PRIVILEGES;
  #If you want to have access only from specific ip address , change 'root'@'%' to 'root'@'( ip address or hostname)'
  test - mysql -h 192.168.1.100 -u root -p


-------------------------------
example creating sample php application docker image and connecting mysql host network which is out of docker network.

  #replace dB Server name to local ip address or host.docker.internal in dbinfo.inc file, before building app
  #sudo docker build -t myphapp .
  #sudo docker image prune -a #command to remove stopped and unwanted images, without -a Will remove all images, container etc
  #sudo docker run -d -p 80:80 --add-host host.docker.internal:172.31.25.228 --name myapp myphapp:latest  # ( replace address to ur local ip)
  #try this instead of about one to check #sudo docker run -d -p 80:80 --add-host host.docker.internal:host-gateway --name myapp myphapp:latest

--‐---------
""""""""«""""""""


reference link for docker app and mysql connection 
https://youtu.be/f3AE8HX3W6s?si=mJJkJRY2ftfnpEV6

reference link for current app creation
https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateWebServer.html
